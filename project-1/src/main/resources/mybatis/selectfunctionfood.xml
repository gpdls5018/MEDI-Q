<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.kosmo.springapp.service.SelectFoodMapper">
	<select id="selectFoodListFromNameScore" parameterType="String" resultType="AvgStarScoreCountDTO">
	    select * from foodtable F JOIN (
		    SELECT R_PRODUCTNO, AVG(STARSCORE) AS AVG_SCORE, COUNT(*) AS REVIEW_COUNT
		    FROM REVIEWTABLE
		    GROUP BY R_PRODUCTNO
		)R ON F.NO = R.R_PRODUCTNO
		<where>
			<if test="casesel == 1">
				AND (productname LIKE '%${foodname}%') OR (company LIKE '%${foodname}%') OR (nutrient LIKE '%${foodname}%') 
			</if>
			<if test="casesel == 2">
				AND (nutrient LIKE '%${foodname}%') 
			</if>
			<if test="casesel == 3">
				AND (productname LIKE '%${foodname}%') OR (company LIKE '%${foodname}%')
			</if>
		</where>
		ORDER by R.AVG_SCORE + ((R.AVG_SCORE * R.REVIEW_COUNT)/1000) DESC,imgurl ASC
	</select>
	
	<select id="selectFoodListFromName" parameterType="String" resultType="FunctionalFoodListDTO">
	    select * from foodtable 
	    <where>
	    	<if test="casesel==1">
	    		AND (productname LIKE '%${foodname}%') OR (company LIKE '%${foodname}%') OR (nutrient LIKE '%${foodname}%')
	    	</if>
	    	<if test="casesel==2">
	    		AND (nutrient LIKE '%${foodname}%')
	    	</if>
	    	<if test="casesel==3">
	    		AND (productname LIKE '%${foodname}%') OR (company LIKE '%${foodname}%') 
	    	</if>
	    </where>
	    ORDER by imgurl
	</select>
	
	<select id="selectFoodListFoodScore" resultType="AvgStarScoreCountDTO">
		SELECT *
		FROM FOODTABLE F
		JOIN (
		    SELECT R_PRODUCTNO, AVG(STARSCORE) AS AVG_SCORE, COUNT(*) AS REVIEW_COUNT
		    FROM REVIEWTABLE
		    GROUP BY R_PRODUCTNO
		) R ON F.NO = R.R_PRODUCTNO
		ORDER BY R.AVG_SCORE + ((R.AVG_SCORE * R.REVIEW_COUNT)/1000) DESC
	</select>
	<select id="selectFoodListFoodScoreTop10" resultType="AvgStarScoreCountDTO">
		SELECT *
		FROM (
		    SELECT *
		    FROM FOODTABLE F
		    JOIN (
		        SELECT R_PRODUCTNO, AVG(STARSCORE) AS AVG_SCORE, COUNT(*) AS REVIEW_COUNT
		        FROM REVIEWTABLE
		        GROUP BY R_PRODUCTNO
		    ) R ON F.NO = R.R_PRODUCTNO
		    ORDER BY R.AVG_SCORE + ((R.AVG_SCORE * R.REVIEW_COUNT)/1000) DESC
		)
		WHERE ROWNUM &lt;= 10
	</select>
	<select id="selectFoodListFromHealthissue" parameterType="String" resultType="AvgStarScoreCountDTO">
		select * from foodtable F JOIN (
		    SELECT R_PRODUCTNO, AVG(STARSCORE) AS AVG_SCORE, COUNT(*) AS REVIEW_COUNT
		    FROM REVIEWTABLE
		    GROUP BY R_PRODUCTNO
		)R ON F.NO = R.R_PRODUCTNO
		where F.material like '%${healthissue}%' ORDER by R.AVG_SCORE + ((R.AVG_SCORE * R.REVIEW_COUNT)/1000) DESC, imgurl ASC
	</select>
	<select id="FoodListFromHealthissue" parameterType="String" resultType="AvgStarScoreCountDTO">
		select * from foodtable where material like '%${healthissue}%' ORDER by imgurl ASC
	</select>
	<select id="healthIssueCou" parameterType="String" resultType="String">
		select H_COUPLING from healthissue where H_NAME like '%${healthissue}%'
	</select>
	<select id="RankingKeyWord" resultType="String">
		SELECT KEYWORD FROM KEYWORD WHERE ROWNUM &lt;= 5 ORDER BY WORDCOUNT DESC
	</select>
	<update id="selectKeyWord" parameterType="String" >
		UPDATE KEYWORD SET WORDCOUNT = WORDCOUNT + 1 WHERE KEYWORD = '${foodname}'
	</update>
	<select id="checkWord" parameterType="String" resultType="CheckWordDTO">
		select 1 from KEYWORD where KEYWORD='${foodname}'
	</select>
	<insert id="newWord" parameterType="String">
		INSERT INTO KEYWORD (KEYWORD,WORDCOUNT) VALUES('${foodname}',0)
	</insert>
</mapper>